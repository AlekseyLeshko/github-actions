name: Default workflow

on:
  push:
    branches-ignore:
      - master
    tags-ignore:
      - '*'
      - '**'

jobs:
  storybook:
    strategy:
      matrix:
        node-version: [10.10.0]
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v1

    - name: Show envs
      env:
        super_secret: ${{ secrets.DEVELOPMENT_TOKEN }}
        API_URL: https://example.com
      run: |
        echo $super_secret
        echo $API_URL
        echo $GITHUB_ACTION

    - name: Build storybook
      run: echo 'Build storybook'

  unit_testing:
    strategy:
      matrix:
        node-version: [10.10.0]
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
      with:
        fetch-depth: 1

    - name: Show envs
      env:
        super_secret: ${{ secrets.DEVELOPMENT_TOKEN }}
        API_URL: https://example.com
      run: |
        echo $super_secret
        echo $API_URL
        echo $GITHUB_ACTION

    - name: Node version
      run: node -v

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}

    - name: Node version
      run: node -v

    - uses: actions/cache@preview
      with:
        path: node_modules
        key: ${{ runner.os }}-node-${{ hashFiles('**/yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-node-

    - uses: actions/cache@preview
      with:
        path: ~/.cache/yarn
        key: ${{ runner.os }}-yarn-${{ hashFiles(format('{0}{1}', github.workspace, '/yarn.lock')) }}
        restore-keys: |
          ${{ runner.os }}-yarn-

    - name: install dependencies
      run: yarn --no-progress --frozen-lockfile

    - name: test
      run: |
        yarn test
        ls -al
      env:
        CI: true

    - uses: actions/upload-artifact@master
      with:
        name: coverage
        path: coverage/

  build:
    strategy:
      matrix:
        node-version: [10.10.0]
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v1

    - name: Show envs
      env:
        super_secret: ${{ secrets.DEVELOPMENT_TOKEN }}
        API_URL: https://example.com
      run: |
        echo $super_secret
        echo $API_URL
        echo $GITHUB_ACTION

    - name: Build app
      run: echo Build app

  deploy_to_aws:
    strategy:
      matrix:
        node-version: [10.10.0]
    runs-on: ubuntu-latest
    needs: [storybook, unit_testing, build]
    steps:
    - name: Show envs
      env:
        super_secret: ${{ secrets.DEVELOPMENT_TOKEN }}
        API_URL: https://example.com
      run: |
        echo $super_secret
        echo $API_URL
        echo $GITHUB_ACTION

    - name: Deploy to aws
      run: echo Deploy to stage

  e2e_testing:
    strategy:
      max-parallel: 3
      matrix:
        node-version: [10.10.0, 10.10.0, 10.10.0]
    container:
      image: cypress/browsers:node11.13.0-chrome73
    needs: deploy_to_aws
    steps:
      - uses: actions/checkout@v1
        with:
          fetch-depth: 1

      - name: Node version
        run: node -v

      - name: Use Node.js ${{ matrix.node-version }}
        uses: actions/setup-node@v1
        with:
          node-version: ${{ matrix.node-version }}

      - name: Node version
        run: node -v

      - name: Show envs
        env:
          super_secret: ${{ secrets.DEVELOPMENT_TOKEN }}
          API_URL: https://example.com
        run: |
          echo $super_secret
          echo $API_URL
          echo $GITHUB_ACTION

      - uses: actions/cache@preview
        with:
          path: node_modules
          key: ${{ runner.os }}-node-${{ hashFiles('**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-node-

      - uses: actions/cache@preview
        with:
          path: ~/.cache/yarn
          key: ${{ runner.os }}-yarn-${{ hashFiles(format('{0}{1}', github.workspace, '/yarn.lock')) }}
          restore-keys: |
            ${{ runner.os }}-yarn-

      - name: install dependencies
        run: yarn --no-progress --frozen-lockfile

      - name: test
        run: |
          yarn test:ci
          ls -al
        env:
          CI: true

      - uses: actions/upload-artifact@master
        with:
          name: coverage
          path: coverage/
